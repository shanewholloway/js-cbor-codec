export { cbor_eoc_sym, cbor_done_sym } from './jump.jsy'

export class U8DecodeBaseCtx ::

  static subclass(types, jmp, unknown) ::
    class U8DecodeCtx_ extends this ::
    let {prototype} = U8DecodeCtx_
    prototype.next_value = U8DecodeCtx_.bind_next_value(jmp, unknown)
    prototype.types = types
    return U8DecodeCtx_


  from_nested_u8(u8) ::
    return this.constructor
      .from_u8(u8, this.types)


  push_types(overlay_types) ::
    let {types, _pop_types, _pop_noop} = this

    if _pop_noop === _pop_types ::
      _pop_types = () => ::
        this.types = types

    this._pop_types = @=> ::
      this._pop_types = _pop_types
      this.types = overlay_types
    return types

  _error_unknown(ctx, type_b) ::
    throw new Error @ `No CBOR decorder regeistered for ${type_b} (0x${('0'+type_b.toString(16)).slice(-2)})`

  _pop_noop() {}

  // Subclass responsibilities:
  //   static bind_decode_api(decoder)
  //   static bind_next_value(jmp, unknown) ::
  //   move(count_bytes) ::

  // Possible Subclass responsibilities:
  //   decode(inc_location) ::
  //   *iter_decode(inc_location) ::
  //   async decode_stream(inc_location) ::
  //   async * aiter_decode_stream(inc_location) ::


