import { decode_types } from './types.jsy'
import { U8DecodeCtx, decode_jump } from './jump.jsy'

export class CBORDecoderBasic ::
  static decode(u8) :: return new this().decode(u8)
  static iter_decode(u8) :: return new this().iter_decode(u8)

  static options(options) ::
    return (class extends this {}).compile(options)

  static compile(options) ::
    this.prototype.compile(options)
    return this

  constructor(options) ::
    if null != options ::
      this.compile(options)

    this.decode = u8 => this._ctxFromU8(u8, this.types).decode()
    this.iter_decode = u8 => this._ctxFromU8(u8, this.types).iter_decode()

  compile(options) ::
    this.jmp = decode_jump @ options, this.jmp

    if options.types ::
      this.types = Object.assign @
        Object.create(this.types || null),
        options.types

    this._ctxFromU8 =
      (this.U8DecodeCtx || U8DecodeCtx)
        .subclass @ this.types, this.jmp, options.unknown
      .fromU8

    return this

CBORDecoderBasic.compile @:
  types: decode_types

export default CBORDecoderBasic

