import CBOREncoderBasic from './basic.jsy'
import { use_encoder_for } from './jump.jsy'

export * from './sym_cbor.jsy'
export * from './jump.jsy'
export * from './ctx.jsy'


export class CBOREncoder extends CBOREncoderBasic ::

CBOREncoder.prototype._encoder_map = basic_tag_encoders(new Map())



export function basic_tag_encoders(encoders) ::
  // tag 1 -- Date
  use_encoder_for @ encoders, new Date(), (v, ctx) => ::
    const end_tag = ctx.tag(1)
    ctx.float64(v / 1000.)
    end_tag()

  // tag 32 -- URIs
  use_encoder_for @ encoders, new URL('ws://h'), (v, ctx) => ::
    const end_tag = ctx.tag(32)
    ctx.add_utf8(v.toString())
    end_tag()

  // tag 258 -- Sets (explicit type)
  use_encoder_for @ encoders, new Set(), (v, ctx) => ::
    const end_tag = ctx.tag(258)
    ctx.list(v, v.size)
    end_tag()

  // tag 259 -- Maps (explicit type)
  use_encoder_for @ encoders, new Map(), (v, ctx) => ::
    const end_tag = ctx.tag(259)
    ctx.pairs(v.entries(), v.size)
    end_tag()

  return encoders

