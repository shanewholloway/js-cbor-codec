
export async function * u8_as_test_stream(u8, test_stream_mode) ::
  switch test_stream_mode ::
    case undefined:
    case 'whole':
      yield u8
      return

    case 'halves':
      let ih = u8.byteLength >> 1
      yield u8.slice(0, ih)
      yield u8.slice(ih)
      return

    case 'frames':
    case 'frame8':
      return yield * _aiter_u8_frames(u8, 8)

    case 'byte':
      return yield * _aiter_u8_frames(u8, 1)

    default:
      throw new Error(`Unknown stream mode: ${test_stream_mode}`)


async function * _aiter_u8_frames(u8, frame_size=8) ::
  for (let i=0; i<u8.byteLength; i += frame_size)
    yield u8.slice(i, i+frame_size)
